#version 430

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
uniform layout(binding = 0, rgba32f) image2D perlinNoise;
uniform layout(binding = 1, rgba32f) readonly image2D normalMap;

uniform float depositionRate;
uniform float erosionRate;
uniform float friction;
uniform float speed;
uniform int maxIterations;
uniform int drops;

void main()
{
    // ivec2 position = ivec2(gl_GlobalInvocationID.xy);
    ivec2 position = ivec2(50, 50);

    for (int drop = 0; drop < drops; drop++) {
        float sediment = 0.0;
        ivec2 previousPosition = position;
        vec2 velocity = vec2(0.0);

        for (int i = 0; i < maxIterations; ++i) {
            vec3 normal = imageLoad(normalMap, position).xyz;
            float deposit = sediment * depositionRate * normal.z;
            float erosion = erosionRate * (1.0 - normal.z);

            float height = imageLoad(perlinNoise, position).r;
            float newHeight = height.r + (deposit - erosion);

            imageStore(perlinNoise, position, vec4(vec3(1.0) * newHeight, 1.0));
            sediment += erosion - deposit;

            velocity.x = friction * velocity.x + normal.x * speed;
            velocity.y = friction * velocity.y + normal.y * speed;
            previousPosition = position;
            position += ivec2(velocity);
        }
    }
}
